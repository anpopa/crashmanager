/*
 * SPDX license identifier: GPL-2.0-or-later
 *
 * Copyright (C) 2019 Alin Popa
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * \author Alin Popa <alin.popa@bmw.de>
 * \file cdm-message-type.h.h
 */

#pragma once

#include <glib.h>
#include <stdbool.h>
#include <stdint.h>

G_BEGIN_DECLS

#define CDM_BUILDTIME_VERSION "@version@"
#define CDM_MESSAGE_START_HASH (0xECDE)

#define CDM_MESSAGE_PROCNAME_LEN (32)
#define CDM_MESSAGE_FILENAME_LEN (1024)
#define CDM_CRASHID_LEN (32)
#define CDM_CRASHCONTEXT_LEN (32)
#define CDM_LIFECYCLESTATE_LEN (32)
#define CDM_VERSION_STRING_LEN (8)

#ifndef CDM_MESSAGE_PACKED
#define CDM_MESSAGE_PACKED __attribute__((aligned (1), packed))
#endif

typedef enum _CdmMessageType {
  CDM_CORE_UNKNOWN,
  CDM_CORE_NEW,
  CDM_CORE_UPDATE,
  CDM_CORE_COMPLETE,
  CDM_CORE_FAILED,
  CDM_CONTEXT_INFO,
} CdmMessageType;

typedef struct _CdmMessageDataContextInfo {
  char lifecycle_state[CDM_LIFECYCLESTATE_LEN];
  char context_name[CDM_CRASHCONTEXT_LEN];
} CdmMessageDataContextInfo;

typedef struct _CdmMessageDataNew {
  int64_t pid;
  int64_t coresig;
  uint64_t tstamp;
  char pname[CDM_MESSAGE_PROCNAME_LEN];
  char tname[CDM_MESSAGE_PROCNAME_LEN];
} CdmMessageDataNew;

typedef struct _CdmMessageDataUpdate {
  char crashid[CDM_CRASHID_LEN];
  char vectorid[CDM_CRASHID_LEN];
  char contextid[CDM_CRASHCONTEXT_LEN];
} CdmMessageDataUpdate;

typedef struct _CDInfoComplete {
  char core_file[CDM_MESSAGE_FILENAME_LEN];
  char context_name[CDM_CRASHCONTEXT_LEN];
  char lifecycle_state[CDM_LIFECYCLESTATE_LEN];
} CdmMessageDataComplete;

typedef union _CdmMessageData {
  CdmMessageDataNew msgnew;
  CdmMessageDataUpdate update;
  CdmMessageDataComplete complete;
} CdmMessageData;

typedef struct _CdmMessageHdr {
  uint16_t hsh;
  uint16_t session;
  uint8_t version[CDM_VERSION_STRING_LEN];
  CdmMessageType type;
  uint32_t data_size;
} CDM_MESSAGE_PACKED CdmMessageHdr;

typedef struct _CdmMessage {
  CdmMessageHdr hdr;
  void *data;
} CDM_MESSAGE_PACKED CdmMessage;

G_END_DECLS
