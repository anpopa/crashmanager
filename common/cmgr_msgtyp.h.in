/* cmgr_msgtyp.c
 *
 * Copyright 2019 Alin Popa <alin.popa@fxdata.ro>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written
 * authorization.
 */

#ifndef CMGR_MSGTYP_H
#define CMGR_MSGTYP_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdbool.h>
#include <stdint.h>

#define CMGR_BUILDTIME_VERSION "@version@"
#define CMGR_MSG_START_HASH (0xECDE)

#define CMGR_MSG_PROCNAME_LEN (32)
#define CMGR_MSG_FILENAME_LEN (256)
#define CMGR_CRASHID_LEN (32)
#define CMGR_CRASHCONTEXT_LEN (32)
#define CMGR_VERSION_STRING_LEN (8)

#ifndef CMGR_MSG_PACKED
#define CMGR_MSG_PACKED __attribute__((aligned(1), packed))
#endif

typedef enum cmgr_msgtype {
    CMGR_CORE_UNKNOWN,
    CMGR_CORE_NEW,
    CMGR_CORE_UPDATE,
    CMGR_CORE_COMPLETE,
    CMGR_CORE_FAILED,
    CMGR_MSG_CHAR,
    CMGR_MSG_RAW
} cmgr_msgtype_t;

typedef struct cmgr_corenew {
    int pid;
    int coresig;
    uint64_t tstamp;
    char pname[CMGR_MSG_PROCNAME_LEN];
    char tname[CMGR_MSG_PROCNAME_LEN];
} cmgr_corenew_t;

typedef struct cmgr_coreupdate {
    char crashid[CMGR_CRASHID_LEN];
    char vectorid[CMGR_CRASHID_LEN];
    char contextid[CMGR_CRASHCONTEXT_LEN];
} cmgr_coreupdate_t;

typedef struct cmgr_corecomplete {
    char core_file[CMGR_MSG_FILENAME_LEN];
    char context_file[CMGR_MSG_FILENAME_LEN];
} cmgr_corecomplete_t;

typedef union cmgr_msg_data {
    cmgr_corenew_t regnew;
    cmgr_coreupdate_t update;
    cmgr_corecomplete_t complete;
} cmgr_msgdata_t;

typedef struct cmgr_msghdr {
    uint16_t hsh;
    uint16_t session;
    uint8_t version[CMGR_VERSION_STRING_LEN];
    cmgr_msgtype_t type;
    uint32_t data_size;
} CMGR_MSG_PACKED cmgr_msghdr_t;

typedef struct cmgr_msg {
    cmgr_msghdr_t hdr;
    void *data;
} CMGR_MSG_PACKED cmgr_msg_t;

#ifdef __cplusplus
}
#endif

#endif /* CMGR_MSGTYP_H */
