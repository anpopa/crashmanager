/* cdm_msgtyp.c
 *
 * Copyright 2019 Alin Popa <alin.popa@fxdata.ro>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written
 * authorization.
 */

#ifndef CDM_MSGTYP_H
#define CDM_MSGTYP_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdbool.h>
#include <stdint.h>

#define CDM_BUILDTIME_VERSION "@version@"
#define CDM_MSG_START_HASH (0xECDE)

#define CDM_MSG_PROCNAME_LEN (32)
#define CDM_MSG_FILENAME_LEN (256)
#define CDM_CRASHID_LEN (32)
#define CDM_CRASHCONTEXT_LEN (32)
#define CDM_VERSION_STRING_LEN (8)

#ifndef CDM_MSG_PACKED
#define CDM_MSG_PACKED __attribute__((aligned(1), packed))
#endif

typedef enum _CDMessageType {
    CDM_CORE_UNKNOWN,
    CDM_CORE_NEW,
    CDM_CORE_UPDATE,
    CDM_CORE_COMPLETE,
    CDM_CORE_FAILED,
    CDM_MSG_CHAR,
    CDM_MSG_RAW
} cdm_msgtype;

typedef struct _CDInfoNew {
    int pid;
    int coresig;
    uint64 tstamp;
    char pname[CDM_MSG_PROCNAME_LEN];
    char tname[CDM_MSG_PROCNAME_LEN];
} CDInfoNew;

typedef struct _CDInfoUpdate {
    char crashid[CDM_CRASHID_LEN];
    char vectorid[CDM_CRASHID_LEN];
    char contextid[CDM_CRASHCONTEXT_LEN];
} CDInfoUpdate;

typedef struct _CDInfoComplete {
    char core_file[CDM_MSG_FILENAME_LEN];
} CDInfoComplete;

typedef union _CDMessageData {
    CDInfoNew regnew;
    CDInfoUpdate update;
    CDInfoComplete complete;
} CDMessageData;

typedef struct _CDMessageHdr {
    uint16 hsh;
    uint16 session;
    uint8 version[CDM_VERSION_STRING_LEN];
    CDMessageType type;
    uint32 data_size;
} CDM_MSG_PACKED CDMessageHdr;

typedef struct _CDMessage {
    CDMessageHdr hdr;
    void *data;
} CDM_MSG_PACKED CDMessage;

#ifdef __cplusplus
}
#endif

#endif /* CDM_MSGTYP_H */
