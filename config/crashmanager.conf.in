###############################################################################
#
# CrashManager @version@ default configuration file
#
###############################################################################

###############################################################################
#
# Common configuration option
#     This section contains options common to all components
#
###############################################################################
[common]
# UserName defines the user name string which the crashmanager is running
#     In case a crash happens before crashmanager is able to create the database
#     the crashhansler will do this first and needs to set the correct chown for
#     the database
UserName = root
# GroupName defines the group name string which the crashmanager is owned.
GroupName = root
# CoredumpDirectory defines the absolute path to the directory where coredumps
#     are stored
CrashdumpDirectory = /var/lib/crashmanager/crashdumps
# RunDirectory application runtime directory
RunDirectory = /run/crashmanager
# IpcSocketFile defines the path to the ipc unix domain socket file
#     The crashmanager is responsible to create and listen on this socket
IpcSocketFile = .cdmipc.sock
# IpcSocketTimeout defines the number of seconds for an IO operation to block
#     during IPC
IpcSocketTimeout = 15

###############################################################################
#
# The crashmanager configuration option
#
###############################################################################
[crashhandler]
# FileSystemMinSize defines the minium filesystem size for CrashdumpDirectory
FileSystemMinSize = 64
# ElevatedNiceValue defines the nice value to set for crashhandler
ElevatedNiceValue = -19
# TruncateCoredumps if set to 1 will dummy write zero for remaining data after
#    context information is extracted resuting smaller coredumps and faster
#    processing with the cost of information lost for the coredump output
TruncateCoredumps = 0

###############################################################################
#
# The crashmanager configuration option
#
###############################################################################
[crashmanager]
# DatabaseFile defines the path to coredump archives state database
DatabaseFile=/var/lib/crashmanager/.crashstate.db
# MaxCrashDumpDirSize defines the maximum size in MB the crashdump directory
#     should use to store old crashdump archives
MaxCrashdumpDirSize=256
# MinCrashdumpDirSize defines the minimum size in MB to be free from the quota
#     so any cdh instance can have space available for crashdump processing
MinCrashdumpDirSize=64
# MaxCrashdumpArchives defines the maximum number of archives to keep in
#     coredump directory
MaxCrashdumpArchives=4
# KDumpSourceDir defines the source directory to read at start for previous
#     kernel crashes
KernelDumpSourceDir = /var/kdumps
# TransferAddress defines the server IP address to be used for uploading the
#   crashdumps. If empty the transfer is skipped
TransferAddress =
# TransferPort defines the port number for scp connection to transfer storage
#   Default to 22
TransferPort = 22
# TransferPath defines the remote storage directory path to be used for
#   crashdump transfer
TransferPath = Downloads
# TransferUser defines the user name for autentification during crashdump
#   transfer. This user should have RW permision to the TransferPath
TransferUser = crashdumper
# TransferPassword defines the password/passphrase to be used during
#   authentification for crashdump transfer. Can be omitted if no passphrase is
#   set for authentification keys
TransferPassword =
# TransferPublicKey defines the path to the ssh public key for autentification
#   during crashdump transfer
TransferPublicKey = /etc/authkeys/crashmanager.pub
# TransferPrivateKey defines the path to the ssh private key for autentification
#   during crashdump transfer
TransferPrivateKey = /etc/authkeys/crashmanager.priv
# ELogSocketFile defines the path to the epilog unix domain socket file
#     The crashmanager is responsible to create and listen on this socket
ELogSocketFile = .epilog.sock
# ELogSocketTimeout defines the number of seconds for an IO operation to block
#     during epilog client communication
ELogSocketTimeout = 5

###############################################################################
#
# Crashcontext sections
#   Each section should have unique name matching pattern crashcontext-<name>
#
###############################################################################
# ProcName defines the process name to apply this crashcontext rule
#   This can be a process name or a regular expresion to match the process name
# DataPath defines the path to data file or directory to dump
#   If the path is a directory only the directory content is listed
#   The PID of the process can be used with formater $$.
# PostCore defines when to process the data
#   If data holds only until process is release (eg. proc) then set
#   this to false.

###############################################################################
#
# Crashcontext /etc/os-version
#
###############################################################################
[crashcontext-osversion]
ProcName = .*
DataPath = /etc/os-release
PostCore = true

###############################################################################
#
# Crashcontext /proc/cmdline
#
###############################################################################
[crashcontext-proc_cmdline]
ProcName = .*
DataPath = /proc/$$/cmdline
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/fd
#
###############################################################################
[crashcontext-proc_fd]
ProcName = .*
DataPath = /proc/$$/fd
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/ns
#
###############################################################################
[crashcontext-proc_ns]
ProcName = .*
DataPath = /proc/$$/ns
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/cgroup
#
###############################################################################
[crashcontext-proc_cgroup]
ProcName = .*
DataPath = /proc/$$/cgroup
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/stack
#
###############################################################################
[crashcontext-proc_stack]
ProcName = .*
DataPath = /proc/$$/stack
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/environ
#
###############################################################################
[crashcontext-proc_environ]
ProcName = .*
DataPath = /proc/$$/environ
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/status
#
###############################################################################
[crashcontext-proc_status]
ProcName = .*
DataPath = /proc/$$/status
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/sched
#
###############################################################################
[crashcontext-proc_sched]
ProcName = .*
DataPath = /proc/$$/sched
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/maps
#
###############################################################################
[crashcontext-proc_maps]
ProcName = .*
DataPath = /proc/$$/maps
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/stat
#
###############################################################################
[crashcontext-proc_stat]
ProcName = .*
DataPath = /proc/$$/stat
PostCore = false

###############################################################################
#
# Crashcontext /proc/pid/smaps
#
###############################################################################
[crashcontext-proc_smaps]
ProcName = .*
DataPath = /proc/$$/smaps
PostCore = false

###############################################################################
#
# Crashcontext /proc/loadavg
#
###############################################################################
[crashcontext-proc_loadavg]
ProcName = .*
DataPath = /proc/loadavg
PostCore = false

###############################################################################
#
# Crashcontext /proc/version
#
###############################################################################
[crashcontext-proc_version]
ProcName = .*
DataPath = /proc/version
PostCore = false

###############################################################################
#
# Crashaction sections
#   Each section should have unique name matching pattern crashaction-<name>
#
###############################################################################
# ProcName defines the process name to apply this crashaction rule
#   This can be a process name or a regular expresion to match the process name
# Victim defines the binary path of the victim. The first and only the first
#   PID for process matching this exe name while enumerating procfs will
#   receive the signal from crashhandler
# Signal defines the signal number to be sent to process
# PostCore defines when to process the data
#   If data holds only until process is release (eg. proc) then set
#   this to false.

###############################################################################
#
# Crashaction abort_other_process
#
###############################################################################
# [crashaction_abort_other_process]
# ProcName = crashed_process_name
# Victim = /path/to/other/process_exec
# Signal = 6
# PostCore = false
