;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Coredumper default configuration file
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Common configuration option
;     This section contains options common to cdh and cdhd
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[common]
; UserName defines the user name string which the coredumper is running
;     In case a crash happens before coremanager is able to create the database
;     the coredumper will do this first and needs to set the correct chown for
;     the database
UserName="root"
; GroupName defines the group name string which the coredumper is owned.
;     See the reason above
GroupName="root"
; FileSystemMountDir defines the absolute path to the storage filesystem
;     The cdh will wait for this to be mounted if a crash occures early during
;     boot. If the mount point is not available it will use the EarlyFileSystemDir
FileSystemMountDir="/"
; CoredumpDirectory defines the relative path to FileSystemMountDir where the
;     coredump arhives will be stored.
CoredumpDirectory="var/coredumper/coredumps"
; CoredumpTmpDirectory defines the temp directory used by cdh when creating the
;     coredump archives. The cdhd can partially recover a crash which was still
;     processing during poweroff
EarlyFileSystemDir="/var/sys"
; EarlyCoredumpDir defines the storage dir for complete coredumps in early
;    coredump mode
EarlyCoredumpDir="coredumps"
; EarlyCoredumpTmpDir defines the temp directory used by cdh in early crash
;     processing
RunDirectory="/run/coredumper"
; IpcSocketFile defines the path to the ipc unix domain socket file
;     The crashmanager is responsible to create and listen on this socket
IpcSocketFile=".cdhipc.sock"
; IpcSocketTimeout defines the number of seconds for an IO operation to block
;     during IPC
IpcSocketTimeout=15

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; The coredumper configuration option
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[coredumper]
; EarlyCoredumpFlagFile if present on target will inform cdh to process a
;     coredump if FileSystemMountDir not mounted. This path is relative to
;     EarlyCoredumpDir
EarlyCoredumpFlagFile="/var/sys/.early_coredumps_enabled"
; FileSystemMinSize defines the minimum filesystem size for coredump directory
;     path. The cdh itself will cleanup archives if it finds itself under this
;     limit. The value is in MB.
FileSystemMinSize=40
; EarlyFileSystemMinSize defines the minimum early filesystem size for coredump
;     directory path. The cdh itself will cleanup archives if it finds itself under
;     this limit. The value is in MB.
EarlyFileSystemMinSize=10
; ElevatedNiceValue defines the nice value to set for cdh when start to process
;     the coredump stream. The value is unix nice value.
ElevatedNiceValue=-19
; FileSystemMaxWait defines the number of seconds to wait until giving up and
;     switching to early mode. The cdh will check every second for mount available
FileSystemMaxWait=10

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; The coremanager configuration option
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[coremanager]
; StateDatabaseFile defines the path to coredump archives state database
StateDatabaseFile=/var/coredumper/coredumps.info
; MaxFileSystemQuota defines the maximum size in MB the coredump directory
;     should use to store old coredump archives
MaxCoredumpDirSize=512
; MinCoredumpDirQuota defines the minimum size in MB to be free from the quota
;     so any cdh instance can have space available for coredump processing
MinCoredumpDirSize=100
; MaxCoredumpArchives defines the maximum number of archives to keep in
;     coredump directory
MaxCoredumpArchives=10
; FileTransferDir defines the absolute path to target directory from which
;     dlt-daemon transfer files to dlt logs. If not set or empty string the
;     file transfer phase will be skipped with archives stored
FileTransferDir="/run/coredumper/transfer"
; FileTransferTimeout defines the number of seconds the coremanager should
;     wait for dlt-daemon to transfer the files
FileTransferTimeout=30
; FileTransferWaitSender defines the number of seconds the coremanager should
;     wait for dlt-system to setup the transfer directory
FileTransferWaitSender=0
; KDumpSourceDir defines the source directory to read at start for previous
;     kernel crashes.
KDumpSourceDir="/var/dumps"
